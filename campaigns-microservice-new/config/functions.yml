createCampaign:
  name: ${self:service}-create
  handler: src/api/create.default
  timeout: 10
  memorySize: 128
  events:
    - http:
        path: /campaign
        method: POST
        cors: ${self:custom.CORS_SETTINGS}
  iamRoleStatementsName: ${self:custom.resourcesPrefix}-campaignsCreateFunctionIAM
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.campaignsTable}"

updateCampaign:
  name: ${self:service}-update
  handler: src/api/update.default
  timeout: 10
  memorySize: 128
  events:
    - http:
        path: /campaign/{id}
        method: PUT
        cors: ${self:custom.CORS_SETTINGS}
  iamRoleStatementsName: ${self:custom.resourcesPrefix}-campaignsUpdateFunctionIAM
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:#{AWS:Region}:#{AWS:AccountId}:table/${self:custom.campaignsTable}"

listCampaign:
  name: ${self:service}-list
  handler: src/api/list.default
  timeout: 6
  memorySize: 128
  events:
    - http:
        path: /campaigns
        method: GET
  iamRoleStatementsName: ${self:custom.resourcesPrefix}-campaignsListFunctionIAM
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.campaignsTable}"

getCampaign:
  name: ${self:service}-get
  handler: src/api/get.default
  timeout: 6
  memorySize: 128
  events:
    - http:
        path: /campaign/{id}
        method: GET
  iamRoleStatementsName: ${self:custom.resourcesPrefix}-campaignsGetFunctionIAM
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.campaignsTable}"

deleteCampaign:
  name: ${self:service}-delete
  handler: src/api/delete.default
  timeout: 6
  memorySize: 128
  events:
    - http:
        path: /campaign/{id}
        method: DELETE
        cors: ${self:custom.CORS_SETTINGS}
  iamRoleStatementsName: ${self:custom.resourcesPrefix}-campaignsDeleteFunctionIAM
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.campaignsTable}"